{"version":3,"sources":["components/Quiz/Quiz.js","App.js","index.js"],"names":["Quiz","React","Component","constructor","props","super","this","state","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","showScore","score","clickHandeler","isCorect","setState","prevState","length","render","_jsx","className","children","_jsxs","map","answer","onClick","bind","App","ReactDOM","document","getElementById"],"mappings":"gKAGe,MAAMA,UAAaC,IAAMC,UACtCC,YAAYC,GACVC,MAAMD,GAENE,KAAKC,MAAQ,CACXC,UAAW,CACT,CACEC,aAAc,iCACdC,cAAe,CACb,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,KAGvC,CACEH,aAAc,uBACdC,cAAe,CACb,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAG3C,CACEH,aAAc,2CACdC,cAAe,CACb,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAG1C,CACEH,aAAc,yCACdC,cAAe,CACb,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MAIpCC,gBAAiB,EACjBC,WAAW,EACXC,MAAO,GAKXC,cAAcC,GACRA,GACFX,KAAKY,UAAUC,IACN,CACLJ,MAAOI,EAAUJ,MAAQ,MAK3BT,KAAKC,MAAMM,kBAAoBP,KAAKC,MAAMC,UAAUY,OAAO,EAC7Dd,KAAKY,SAAS,CACZJ,WAAW,IAGbR,KAAKY,UAAUC,IACN,CACLN,gBAAiBM,EAAUN,gBAAkB,MAMrDQ,SACE,OACEC,cAAA,OAAKC,UAAU,MAAKC,SAEjBlB,KAAKC,MAAMO,UACVW,eAAA,OAAKF,UAAU,gBAAeC,SAAA,CAAC,cAAYlB,KAAKC,MAAMQ,MAAM,eAE5DU,eAAA,OAAAD,SAAA,CACEC,eAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAC/BC,eAAA,OAAKF,UAAU,iBAAgBC,SAAA,CAC7BC,eAAA,QAAAD,SAAA,CAAM,YAAUlB,KAAKC,MAAMM,gBAAkB,KAAS,IAAE,IACvDP,KAAKC,MAAMC,UAAUY,UAExBE,cAAA,OAAKC,UAAU,gBAAeC,SAC3BlB,KAAKC,MAAMC,UAAUF,KAAKC,MAAMM,iBAAiBJ,kBAGtDa,cAAA,OAAKC,UAAU,iBAAgBC,SAC5BlB,KAAKC,MAAMC,UACVF,KAAKC,MAAMM,iBACXH,cAAcgB,KAAKC,GACnBL,cAAA,UACEM,QAAStB,KAAKU,cAAca,KAAKvB,KAAMqB,EAAOf,WAAWY,SAExDG,EAAOhB,uBChGX,MAAMmB,UAAY5B,YAC7BmB,SACI,OACIC,cAAA,OAAAE,SACIF,cAACtB,EAAI,OCDrB+B,IAASV,OACPC,cAACQ,EAAG,IACJE,SAASC,eAAe,U","file":"static/js/main.99b4d3ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Quiz.css\";\r\n\r\nexport default class Quiz extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      questions: [\r\n        {\r\n          questionText: \"What is the capital of France?\",\r\n          answerOptions: [\r\n            { answerText: \"New York\", isCorrect: false },\r\n            { answerText: \"London\", isCorrect: false },\r\n            { answerText: \"Paris\", isCorrect: true },\r\n            { answerText: \"Dublin\", isCorrect: false },\r\n          ],\r\n        },\r\n        {\r\n          questionText: \"Who is CEO of Tesla?\",\r\n          answerOptions: [\r\n            { answerText: \"Jeff Bezos\", isCorrect: false },\r\n            { answerText: \"Elon Musk\", isCorrect: true },\r\n            { answerText: \"Bill Gates\", isCorrect: false },\r\n            { answerText: \"Tony Stark\", isCorrect: false },\r\n          ],\r\n        },\r\n        {\r\n          questionText: \"The iPhone was created by which company?\",\r\n          answerOptions: [\r\n            { answerText: \"Apple\", isCorrect: true },\r\n            { answerText: \"Intel\", isCorrect: false },\r\n            { answerText: \"Amazon\", isCorrect: false },\r\n            { answerText: \"Microsoft\", isCorrect: false },\r\n          ],\r\n        },\r\n        {\r\n          questionText: \"How many Harry Potter books are there?\",\r\n          answerOptions: [\r\n            { answerText: \"1\", isCorrect: false },\r\n            { answerText: \"4\", isCorrect: false },\r\n            { answerText: \"6\", isCorrect: false },\r\n            { answerText: \"7\", isCorrect: true },\r\n          ],\r\n        },\r\n      ],\r\n      currentQuestion: 0,\r\n      showScore: false,\r\n      score: 0,\r\n    };\r\n  }\r\n  // ********************************************'clickHandeler\r\n\r\n  clickHandeler(isCorect) {\r\n    if (isCorect) {\r\n      this.setState((prevState) => {\r\n        return {\r\n          score: prevState.score + 1,\r\n        };\r\n      });\r\n    }\r\n\r\n    if (this.state.currentQuestion === this.state.questions.length-1) {\r\n      this.setState({\r\n        showScore: true,\r\n      });\r\n    } else {\r\n      this.setState((prevState) => {\r\n        return {\r\n          currentQuestion: prevState.currentQuestion + 1,\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        {/* next div is for showing user score */}\r\n        {this.state.showScore ? (\r\n          <div className=\"score-section\">You scored {this.state.score} out of 4</div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"question-section\">\r\n              <div className=\"question-count\">\r\n                <span>Question {this.state.currentQuestion + 1}</span>/{\" \"}\r\n                {this.state.questions.length}\r\n              </div>\r\n              <div className=\"question-text\">\r\n                {this.state.questions[this.state.currentQuestion].questionText}\r\n              </div>\r\n            </div>\r\n            <div className=\"answer-section\">\r\n              {this.state.questions[\r\n                this.state.currentQuestion\r\n              ].answerOptions.map((answer) => (\r\n                <button\r\n                  onClick={this.clickHandeler.bind(this, answer.isCorrect)}\r\n                >\r\n                  {answer.answerText}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Quiz from './components/Quiz/Quiz'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Quiz />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}